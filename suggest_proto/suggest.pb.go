// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: suggest.proto

package suggest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//search
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggests []*Suggest `protobuf:"bytes,1,rep,name=suggests,proto3" json:"suggests,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResponse) GetSuggests() []*Suggest {
	if x != nil {
		return x.Suggests
	}
	return nil
}

//suggest
type Suggest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	LinkUrl string   `protobuf:"bytes,2,opt,name=LinkUrl,proto3" json:"LinkUrl,omitempty"`
	Title   string   `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Queries []string `protobuf:"bytes,4,rep,name=Queries,proto3" json:"Queries,omitempty"`
}

func (x *Suggest) Reset() {
	*x = Suggest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Suggest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Suggest) ProtoMessage() {}

func (x *Suggest) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Suggest.ProtoReflect.Descriptor instead.
func (*Suggest) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{2}
}

func (x *Suggest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Suggest) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *Suggest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Suggest) GetQueries() []string {
	if x != nil {
		return x.Queries
	}
	return nil
}

type SuggestIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *SuggestIndex) Reset() {
	*x = SuggestIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestIndex) ProtoMessage() {}

func (x *SuggestIndex) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestIndex.ProtoReflect.Descriptor instead.
func (*SuggestIndex) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{3}
}

func (x *SuggestIndex) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type CSV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text []byte `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CSV) Reset() {
	*x = CSV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSV) ProtoMessage() {}

func (x *CSV) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSV.ProtoReflect.Descriptor instead.
func (*CSV) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{4}
}

func (x *CSV) GetText() []byte {
	if x != nil {
		return x.Text
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{5}
}

type SuggestArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggests []*Suggest `protobuf:"bytes,1,rep,name=Suggests,proto3" json:"Suggests,omitempty"`
}

func (x *SuggestArray) Reset() {
	*x = SuggestArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestArray) ProtoMessage() {}

func (x *SuggestArray) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestArray.ProtoReflect.Descriptor instead.
func (*SuggestArray) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestArray) GetSuggests() []*Suggest {
	if x != nil {
		return x.Suggests
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suggest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_suggest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_suggest_proto_rawDescGZIP(), []int{7}
}

func (x *Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_suggest_proto protoreflect.FileDescriptor

var file_suggest_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x3e, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x08, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x63, 0x0a, 0x07, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69,
	0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x69, 0x6e,
	0x6b, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x51, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x51, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x19, 0x0a, 0x03, 0x43, 0x53,
	0x56, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3c,
	0x0a, 0x0c, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2c,
	0x0a, 0x08, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x73, 0x22, 0x1a, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xe3, 0x02, 0x0a, 0x0e, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x65,
	0x12, 0x10, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0c,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x53, 0x56, 0x1a, 0x0f, 0x2e, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x10,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x33,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x1a, 0x0f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a,
	0x5a, 0x08, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_suggest_proto_rawDescOnce sync.Once
	file_suggest_proto_rawDescData = file_suggest_proto_rawDesc
)

func file_suggest_proto_rawDescGZIP() []byte {
	file_suggest_proto_rawDescOnce.Do(func() {
		file_suggest_proto_rawDescData = protoimpl.X.CompressGZIP(file_suggest_proto_rawDescData)
	})
	return file_suggest_proto_rawDescData
}

var file_suggest_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_suggest_proto_goTypes = []interface{}{
	(*SearchRequest)(nil),  // 0: suggest.SearchRequest
	(*SearchResponse)(nil), // 1: suggest.SearchResponse
	(*Suggest)(nil),        // 2: suggest.Suggest
	(*SuggestIndex)(nil),   // 3: suggest.SuggestIndex
	(*CSV)(nil),            // 4: suggest.CSV
	(*Empty)(nil),          // 5: suggest.Empty
	(*SuggestArray)(nil),   // 6: suggest.SuggestArray
	(*Status)(nil),         // 7: suggest.Status
}
var file_suggest_proto_depIdxs = []int32{
	2, // 0: suggest.SearchResponse.suggests:type_name -> suggest.Suggest
	2, // 1: suggest.SuggestArray.Suggests:type_name -> suggest.Suggest
	0, // 2: suggest.SuggestService.Search:input_type -> suggest.SearchRequest
	2, // 3: suggest.SuggestService.AddOne:input_type -> suggest.Suggest
	4, // 4: suggest.SuggestService.AddFile:input_type -> suggest.CSV
	3, // 5: suggest.SuggestService.GetOne:input_type -> suggest.SuggestIndex
	5, // 6: suggest.SuggestService.Get:input_type -> suggest.Empty
	3, // 7: suggest.SuggestService.DeleteOne:input_type -> suggest.SuggestIndex
	5, // 8: suggest.SuggestService.Delete:input_type -> suggest.Empty
	1, // 9: suggest.SuggestService.Search:output_type -> suggest.SearchResponse
	7, // 10: suggest.SuggestService.AddOne:output_type -> suggest.Status
	7, // 11: suggest.SuggestService.AddFile:output_type -> suggest.Status
	2, // 12: suggest.SuggestService.GetOne:output_type -> suggest.Suggest
	6, // 13: suggest.SuggestService.Get:output_type -> suggest.SuggestArray
	7, // 14: suggest.SuggestService.DeleteOne:output_type -> suggest.Status
	7, // 15: suggest.SuggestService.Delete:output_type -> suggest.Status
	9, // [9:16] is the sub-list for method output_type
	2, // [2:9] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_suggest_proto_init() }
func file_suggest_proto_init() {
	if File_suggest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_suggest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suggest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suggest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Suggest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suggest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suggest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suggest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suggest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suggest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_suggest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_suggest_proto_goTypes,
		DependencyIndexes: file_suggest_proto_depIdxs,
		MessageInfos:      file_suggest_proto_msgTypes,
	}.Build()
	File_suggest_proto = out.File
	file_suggest_proto_rawDesc = nil
	file_suggest_proto_goTypes = nil
	file_suggest_proto_depIdxs = nil
}
